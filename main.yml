---
- hosts: all
  vars:
    ansible_become: yes
  tasks:
    - name: Install common packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - "linux-image-extra-{{ ansible_kernel }}"
        - linux-image-extra-virtual
        - python-pip
        - apt-transport-https
        - ca-certificates
        - software-properties-common

    - name: Add docker repository key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add docker repository
      apt_repository:
       repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
       state: present

    - name: Install docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes

    - name: Pip packages
      pip:
        name: "{{ item }}"
        state: present
      with_items:
        - docker

    #
    # Start the qdrouterds
    #
    - name: Create the configuration directory
      file:
        path: /etc/qpid-generator
        state: directory

    - name: Generate the configuration files
      template:
        src: qdrouterd.conf.jinja2
        dest: "/etc/qpid-generator/{{ item.router_id }}.conf"
      with_items: "{{ confs }}"
      when: item.machine == inventory_hostname

    - name: Start qdrouterd(s)
      docker_container:
        image: msimonin/qdrouterd
        name: "{{ item.router_id }}"
        volumes:
          - "/etc/qpid-generator/{{ item.router_id }}.conf:/etc/qpid-dispatch/qdrouterd.conf"
        network_mode: host
        state: started
      with_items: "{{ confs }}"
      when: item.machine == inventory_hostname

    #
    # Start the gui
    #
    - name: Start the web gui
      docker_container:
        image: msimonin/qpid-dispatch-gui
        name: qpid-dispatch-gui
        network_mode: host
        state: started
      when: inventory_hostname == groups['all'][0]

    #
    # Websockify AMQP listener
    #
    - name: Websockify AMQP listener
      docker_container:
        image: msimonin/websockify
        command: "0.0.0.0:4999 {{ hostvars[inventory_hostname]['ansible_' + external_interface]['ipv4']['address'] }}:5000"
        name: websockify
        network_mode: host
        state: started
      when: inventory_hostname == groups['all'][0]
